const FormLabel = props => {
    const style = {
        display: "block"
    }

    return <label style = {style} > {props.label} </label>
}

FormLabel.propTypes = {
    label: PropTypes.string.isRequired
}

const FormInput = props => {
    const style = {
        display: "block",
        width: 200,
        padding: "3px 0"
    }
    
    return <input style = {style} 
                    type = "text"
                    value = {props.value} 
                    name = {props.name} 
                    onChange = {props.handleChange} 
            />
}

FormInput.propTypes = {
    value: PropTypes.string.isRequired,
    name: PropTypes.string.isRequired,
    handleChange: PropTypes.func.isRequired
}

const SelectOptions = props => {
    const style = {
        width: 200,
        padding: "3px 0"
    }
    
    const mapOptions = props.options.map((option, index) => {
        return <option key = {index} value = {option} > {option} </option>
    })
    return <select style = {style}
                    value = {props.value} 
                    name = "activity"
                    onChange = {props.handleChange}
                    >
                    {mapOptions} 
            </select>
}

SelectOptions.propTypes = {
    options: PropTypes.array.isRequired,
    value: PropTypes.string.isRequired,
    handleChange: PropTypes.func.isRequired
}

const FormCheckBoxes = props => {
    const mapCheckBoxes = props.mapBoxes.map((boxes, index) => {
        return <div key = {index}>
            <input 
                    type = "checkbox" 
                    id = {boxes.id} 
                    onChange = {props.handleBoxChange} 
                    checked = {boxes.checked}
            />
            <label key> {boxes.boxLabel} </label>
        </div>
    }) 
    return <div> {mapCheckBoxes} </div>
}

FormCheckBoxes.propTypes = {
    mapBoxes: PropTypes.array.isRequired,
    handleBoxChange: PropTypes.func.isRequired
}

const Table = props => {
    return (
        <table>
            <thead>
                <tr>
                    <th> Remove </th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Activity</th>
                    <th>Restrictions</th>
                </tr>
            </thead>
            <tbody>
                {
                    props.listDetails.map((detail, index) => {
                        return <tr>
                            <td> <button onClick = {()=> props.handleRemove(index)}> x </button></td>
                            <td> {detail.firstName} </td>
                            <td> {detail.lastName} </td>
                            <td> {detail.activity} </td>
                            <td> 
                                {detail.restrictions.a ? "a" : ""} 
                                {detail.restrictions.b ? "b" : ""}
                                {detail.restrictions.c ? "c" : ""}
                            </td>
                        </tr>
                    })
                }
            </tbody>
        </table>
    )
}

Table.propTypes = {
    listDetails: PropTypes.array.isRequired,
    handleRemove: PropTypes.func.isRequired
}

class FormDetails extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            firstName: "",
            lastName: "",
            activity: "Painting",
            restrictions: {a: false, b: false, c: false},
            listItems: []
        }
        this.handleInputChange = this.handleInputChange.bind(this);
        this.handleCheckBox = this.handleCheckBox.bind(this);
        this.handleFormSubmit = this.handleFormSubmit.bind(this);
        this.removeItems = this.removeItems.bind(this);
    }
    handleInputChange(event) {
        this.setState({[event.target.name]: event.target.value})
        //console.log(event.target.value)
    }
    handleCheckBox(event) {
        const copyRestrictions = {...this.state.restrictions};
        copyRestrictions[event.target.id] = event.target.checked;
        this.setState({restrictions: copyRestrictions});
        //console.log(event.target.checked);
    }
    handleFormSubmit(event) {
        event.preventDefault();
        const listItemsCopy = this.state.listItems.slice();
        listItemsCopy.push({
            firstName: this.state.firstName,
            lastName: this.state.lastName,
            activity: this.state.activity,
            restrictions: this.state.restrictions
        })
        this.setState({
            firstName: "",
            lastName: "",
            activity: "Painting",
            restrictions: {a: false, b: false, c: false},
            listItems: listItemsCopy
        })
    }
    removeItems(index) {
        const listItemsCopy = [...this.state.listItems];
        listItemsCopy.splice(index, 1);
        this.setState({listItems: listItemsCopy});
    }
    render() {
        return (
            <div>
                <form onSubmit = {this.handleFormSubmit} >
                    <FormLabel label = "First Name" />
                    <FormInput value = {this.state.firstName} name = "firstName"  handleChange = {this.handleInputChange}/>
                    <FormLabel label = "Last Name" />
                    <FormInput value = {this.state.lastName} name = "lastName" handleChange = {this.handleInputChange} />
                    <FormLabel label = "Select Activity" />
                    <SelectOptions options = {["Science Lab", "Swimming", "Cooking", "Painting"]} 
                                    value = {this.state.activity}
                                    handleChange = {this.handleInputChange}
                    />
                    <FormCheckBoxes mapBoxes = {[
                                        {id: "a", boxLabel: "a) Dietary Restrictions", checked: this.state.restrictions.a},
                                        {id: "b", boxLabel: "b) Physical Disabilities",  checked: this.state.restrictions.b},
                                        {id: "c", boxLabel: "c) Medical Needs", checked: this.state.restrictions.c}
                                    ]}
                                    handleBoxChange = {this.handleCheckBox}
                    />
                    <button style = {{display: "block", width: 200, padding: "5px 0"}}> Submit </button>
                </form>
                <Table listDetails = {this.state.listItems} handleRemove = {this.removeItems} />
            </div>
        )
    }
}

ReactDOM.render(<FormDetails/>, document.getElementById('root'));